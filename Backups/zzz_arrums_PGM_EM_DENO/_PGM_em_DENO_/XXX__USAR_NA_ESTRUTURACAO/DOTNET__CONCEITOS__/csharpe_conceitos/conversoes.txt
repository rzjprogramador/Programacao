
conversoes:

conversao: converter qual tipo para outro
metodo: Convert.To...<o tipo que deseja> vai devolver o resultado Desejado 
conceito: o Convert aceita objeto e como os tipos herdam de object por serem de class ...então serao aceitos obs: o Parse nao aceita objetos.

exemplo: 
int n = 10;
bool b = Convert.ToBoolean(n); // se tiver valor a var passada "n" vai retornar True
Console.WriteLine(b);

---

converter: string para numero , 
metodo: metodo do tipo int .TryParse recebe a stringAlvo, e em 2º usa o modificador out <cria a variavel Desejada de Saida> 
exemplo:
int.TryParse("45" ,out int convertidoEmNumero);
Console.WriteLine(convertidoEmNumero);

---

conversao: converter numero para string
metodo: criar varResultado atribuir o numero desencadeando dele o metodo ToString que todos tipos Staticos terão 
exemplo:
int n = 10;
string s = n.ToString();

---

conversao: convertendo_implicitamente
conceito: um tipo que é diferente do outro, a gente força o compilador aceitar correndo o risco de perder dados se o tipo recebedor estourar com o tamanho do recebido muito grande perderá dados.
  para converter implicitamente colocar entre parenteses o tipo de desejo na conversao

exemplo: 
int n = 10;
long y = 1111111;
n = (int) y;  // convertendo_implicitamente a variavel "y" para inteiro obs: pode perder dados
Console.WriteLine(n);

---
