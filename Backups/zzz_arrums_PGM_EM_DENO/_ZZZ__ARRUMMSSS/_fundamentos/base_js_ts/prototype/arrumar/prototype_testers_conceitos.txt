
# COSTUMA TESTAR

contexto:
criacao_sucesso
- se tem a prop gerada pela app.
-
comando: toHaveProperty('prop')

.....

test_backend: usar ferramentas: https://vitest.dev/api/#test-only

....
ver_prototype_no_browser:
 instancia: instance.__proto__
 classe: Classe.prototype
.....

Testar Prototype e Instancia da Classe:
// Testar se a instancia herdou tudo o prototipo da classe

/ SE DER "true" a instancia contem certinho os metodos do Parent/Pai em seu prototype...tudo ok

console.log( Entity.prototype === instanceE1.__proto__)


contexto:
case_fail assincrono:
seja rejeitado , .rejects
e esta rejeicao seja igual, .toEqual(<excessao que sera lancada>)

comando: rejects.toEqual( <retorno escolhido para esta falha> )
.....

contexto:
que a promessa nao de erro que seja um resolver, e que o sucesso seja instancia da classe que prometeu criar

comando: resolves.toBeInstanceOf( 'Classe' )
