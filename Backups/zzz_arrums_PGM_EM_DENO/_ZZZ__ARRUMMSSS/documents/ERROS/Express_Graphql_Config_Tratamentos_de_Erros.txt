express: {
    configuracao_midle+erros_no_app_express: `
    app.use(funcaoMidleDeErros)
    `,
    conceito: `Com o midle de Erro no app express nao precisa mais de try/catch nos blocos da aplicacao...ele ja captura futuros erros se tiver classe de Erro nativo do Js ou Erros personalizados instancias da classe de Error nativa do Js nos codigos`,

    importantes: `
    O MIDLE TEM QUE SER CHAMADO POR ULTIMO ANTES OU ANTES DO SERVER.

    PARA FUNCIONAR O MIDLE ASYNCRONO instalar express-async-errors 
    E NO INDEX DO SERVER EM PRIMEIRO LUGAR ANTES DO EXPRESS SOMENTE IMPORTA-LO COMO:: import 'express-async-errors'
    `,

    error_middle_express: `O ERRORMIDDLE : ESTA HABILITANDO QUALQUER CODIGO QUE LANCAR UMA EXCESSAO QUE SEJA INSTANCIA DE ERROR JS`,

    usando_tratamento_no_codigo: {
        tem que ter uma instancia da classe Error do js no codigo, para o midle de Erro do express capturar o erro sem o try,catch.

    }

    instancias_de_erro_obrigatoria_a_cada_bloco: {
        pode_ser_instancia_throw: 'throw new Error("Mensagem")',
        pode_ser_instancia_personalizada: '',

    }

    excessoes_possiveis_para_lancamento: {
        BadRequestError: 'Mal Requisicao', statusCode: 400,
        NotFoundError: 'Nao Encontrado', statusCode: 404,
        UnauthorizedError: 'Nao Autorizado', statusCode: 401,
    }
}