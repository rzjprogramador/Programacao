# ESLINT & PRETTIER
```yarn add -D eslint```  

depois o init para ser configuravel :
> inicializar eslint: `npx eslint --init` // unica vez para configurar eslint.json
escolher: [

    - checar sintaxe e problemas
    - modulos escolher Javascript modules(import/export)
    - projeto usa algum framework ..se for API escolher "None" NAO
    - se usa typescript : YES
    - Projeto vai rodar aonde : se for api vairodar no Node
    - formato arquivo de configuracao escolher JSON
    - instalar as dependencias de parser do eslint para ts escolher YES

]

PARA TS ELE VAI AUTO-INSTALAR DEPOIS DO QUESTIONARIO :
PLUGIN PARA TS :: @typescript-eslint/eslint-plugin@latest
PARSER PARA TS : @typescript-eslint/parser@latest

---
LIBS ADICIONAIS :
yarn add -D eslint-config-standard   // PARA CONFIGURAR STANDART : https://www.npmjs.com/package/eslint-config-standard

> no arquivo de configuracao eslint :: eslint.json
> add em parseOptions o apontamento do eslint para o tsconfig.json - senao da erro
> `"project": ["./tsconfig.json"]`
> pronto pode dar reaload que o eslint via estar pegando erros quando aparecer no codigo.

--
CONFIG. NO ESLINTRC
no extends coloca "POR ULTIMO" o que quer extender ex: "standard", sE QUISER TBM O PRETTIER COLOCA "prettier"

---
AUTO SALVAR E FORMATAR:
VSCODE SETTINGS >> PARA ESLINT:
// ADD PARA ESLINT
```
 "files.autoSave": "afterDelay",
 "editor.formatOnSave": true
```

// AUTOMATICAMENTE JA VAI FORMATAR AO SALVAR NAO PRECISA MAIS CONFIG ABAIXO ; DESCONTINUADO
"editor.codeActionsOnSave": { // AUTO SALVAR USANDO ESLINT
"source.fixAll.eslint": true
},
```

---


