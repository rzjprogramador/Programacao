import { ApiError } from '@src/globals/custom_errors/CustomApiErrorExpress'

import { NextFunction, Request, Response } from 'express'

export const errorMiddle = (
    error: Error & Partial<ApiError>,
    req: Request,
    res: Response,
    next: NextFunction
    ) => {

    const statusCode = error.statusCode ?? 500
    const message = error.statusCode ? error.message : 'Internal Server Error'

    // console.log(error)

    return res.status(statusCode).json({ message })

  }

  // ESTE ERRORMIDDLE : ESTA HABILITANDO QUALQUER CODIGO QUE LANCAR UMA EXCESSAO QUE SEJA INSTANCIA DE ERROR JS

// CLASSES DE ERROS CUSTOMIZADOS ===================================
// ERROS CUSTOMIZADOS EXPRESS

// CLASSE BASE

export class ApiError extends Error {
    public readonly statusCode: number

    constructor(message: string, statusCode: number) {
        super(message)
        this.statusCode = statusCode
    }
}

// SUBCLASSES

export class BadRequestError extends ApiError {
    constructor(message: string) {
        super(message, 400)
    }
}

export class NotFoundError extends ApiError {
    constructor(message: string) {
        super(message, 404)
    }
}

export class UnauthorizedError extends ApiError {
    constructor(message: string) {
        super(message, 401)
    }
}