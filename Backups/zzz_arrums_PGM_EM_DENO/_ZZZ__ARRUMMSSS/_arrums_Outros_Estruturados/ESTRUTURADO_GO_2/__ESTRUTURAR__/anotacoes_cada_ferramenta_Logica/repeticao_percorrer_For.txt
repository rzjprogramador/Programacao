# repeticoes
loops precisam destes valores:

  iterador: sera uma variavel que a cada volta do loop vai incorporar / vai "ser" o valor do alvo iterado...ou seja tenho uma pilha de recipientes que defini como alvo da iteracao ..entao a cada volta que o loop der o "iterador" será o valor dentro deste recipiente/variavel e a cada iteracao posdo fazer algo com este valor.

  valorDeInicio : para ponto de partida do Iterador; 
  
  condicao: Para PARAR a oteracao/voltas do iterador; 
  
  passosACadaIteracao: acao no iterador do para produzir sua parada chegando no que vc definiu na condicao para PARAR o loop.

repeticoes: usar a funcaoLoop while , traducao: enquanto,
param: ela recebe uma condicaoLogica, e enquanto o estado/valor desta condicao for verdadeira ela repete o comando que esta no primeiro blocoVerdade....obs: nao esquecer de preparar uma var para valvula de escape para terminar o loop.

macete: seu uso é semelhante ao if " SE NO PRESENTE A CASA VOLTA DA ITERACAO A CONDICAO FOR VERDADE "  vai repetir o comando definido no que estiver no primeiroBlocoVerdade.

// exemplo:

function perguntar() {
  const resposta = prompt('Deseja repetir? ')
  alert('Vou repetir ate dizer nao')  
  return resposta  
}

function segue() {
  alert('Ate que enfim respondeu NAO!')
}

while(perguntar() != 'nao') {  
  perguntar()
  // perguntar = 'nao'
}
segue()

// =====

loop for : é uma funcaocondicional de repeticaoIteracao igual o while a diferenca que declaramos sua inicializacao ; condicao; icremento na mesma linha no param do for()

// =====

loop : iteracao acoes em agrupadores lista.
/*
  for , for in, forEach
*/
const info1 = { nome: 'rei', num: 10 }
const info2 = { nome: 'leo', num: 6 }
const info3 = { nome: 'guga', num: 12 }

let lista = [info1, info2, info3]

// passar os nomes na lista para maiusculo

for(i = 0;i < lista.length;i++) {
 // console.log(lista[i].nome.toUpperCase())
}

for(let i in lista) {
// console.log(lista[i].nome.toUpperCase())
}

lista.forEach(function (i) {
  console.log(i.nome.toUpperCase())
})

// console.log(lista)


###

recuperar iteracao de um loop fora do loop ex:for #base

- "1 - declare_var_vazia" fora do loop
- "2- preencha dentro do loop"  com metodo preenchedor da que declarou vazia
- "3 - retornePreenchida " fora do loop.
- 

